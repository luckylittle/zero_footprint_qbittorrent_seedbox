---
# tasks file for zero_footprint_qbittorrent_seedbox/01-common

- name: COMMON | 1.1 Upgrade all existing packages
  ansible.builtin.dnf:
    name: "*"
    state: "latest"  # noqa package-latest
  notify:
    - "Restart NetworkManager"
  become: true
  tags:
    - common

- name: COMMON | 1.2 Flush handlers
  ansible.builtin.meta: flush_handlers
  tags:
    - common

- name: COMMON | 1.3 Set timezone
  community.general.timezone:
    name: "{{ set_timezone }}"
  become: true
  tags:
    - common

- name: COMMON | 1.4 Add two IPv4 Google DNS servers (Optional)
  # Can be tricky sometimes, if multiple connections of the same
  # type are present - e.g. `eth0` and `System eth0`. Manual
  # check is required to see if it was applied to the correct one!
  community.general.nmcli:
    conn_name: "{{ ansible_default_ipv4.alias }}"
    type: "ethernet"
    dns4:
      - 8.8.8.8
      - 8.8.4.4
    state: "present"
  become: true
  when: set_google_dns
  tags:
    - common

- name: COMMON | 1.5 Create a directory structure
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/{{ item }}"
    state: "directory"
    mode: "0777"
  loop: "{{ create_folders }}"
  tags:
    - common

- name: COMMON | 1.6 Remove unnecessary messages of the day
  ansible.builtin.file:
    path: "/etc/motd.d/{{ item }}"
    state: "absent"
  become: true
  loop:
    - "cockpit"
    - "insights-client"
  tags:
    - common

- name: COMMON | 1.7 Systemd wide DefaultLimitNOFILE
  ansible.builtin.lineinfile:
    path: "/etc/systemd/system.conf"
    regexp: '^#DefaultLimitNOFILE=.*'
    line: "DefaultLimitNOFILE={{ maximum_number_of_open_file_descriptors }}"
    backup: true
  become: true
  tags:
    - common

- name: COMMON | 1.8 Set soft nofile limit
  ansible.builtin.lineinfile:
    path: "/etc/security/limits.conf"
    line: "* soft nofile \
          {{ maximum_number_of_open_file_descriptors }}"
    insertbefore: '^# End of file$'
    backup: true
  become: true
  tags:
    - common

- name: COMMON | 1.9 Set hard nofile limit
  ansible.builtin.lineinfile:
    path: "/etc/security/limits.conf"
    line: "* hard nofile \
          {{ maximum_number_of_open_file_descriptors }}"
    insertbefore: '^# End of file$'
    backup: true
  become: true
  tags:
    - common

- name: COMMON | 1.10 Get /home mount information
  ansible.builtin.set_fact:
    home_mount: "{{ ansible_mounts | selectattr('mount', 'equalto', '/home')
                  | list | first }}"
  tags:
    - common

- name: COMMON | 1.11 Remount a /home and change atime options
  ansible.posix.mount:
    src: "UUID={{ home_mount.uuid }}"
    path: "/home"
    fstype: "{{ home_mount.fstype }}"
    state: "present"
    opts: "defaults,noatime,nodiratime"
    backup: true
  become: true
  tags:
    - common

- name: COMMON | 1.12 Include sysctl vars
  ansible.builtin.include_vars: "vars/sysctl.yml"
  when: sysctl_tunables
  tags:
    - common

- name: COMMON | 1.13 Set various sysctl settings
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: true
    reload: true
    state: present
  loop: "{{ sysctl_settings | dict2items }}"
  become: true
  when: sysctl_tunables
  tags:
    - common

- name: COMMON | 1.14 Install dynamic adaptive system tuning daemon
  ansible.builtin.dnf:
    name: "tuned"
    state: present
  become: true
  tags:
    - common

- name: COMMON | 1.15 Configure tuned for latency-performance
  ansible.builtin.command: "tuned-adm profile latency-performance"
  changed_when: true
  notify:
    - "Restart tuned"
  become: true
  tags:
    - common
